<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
    <import resource="classpath:/amazonS3Beans.xml" />
    <import resource="classpath:/validators.xml" />
    <import resource="classpath:/service.xml" />
    <!--  <bean id="openJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter"/>-->
       
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="persistenceUnitName" value="komar" />
    	<!-- <property name="jpaVendorAdapter" ref="openJpaVendorAdapter" /> -->
	</bean>
        
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	 
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<context:annotation-config />
	<context:component-scan base-package="com.calisation.server.repository"/>
	<context:component-scan base-package="com.calisation.server.service"/>
	<context:component-scan base-package="com.komar.service.coloudstorage.put.amazons3"/>
    <context:component-scan base-package="com.komar.service.application"/>
    <context:component-scan base-package="com.komar.repository"/>
	
	 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="50000000"/>
    </bean>
    
    <bean id="putService" class="com.komar.service.coloudstorage.amazons3.put.AmazonS3PutService">
    	<property name="bucketName" value="komar-sandbox"/>
    </bean>

    <bean id="deleteService" class="com.komar.service.coloudstorage.amazons3.delete.AmazonS3DeleteService">
        <property name="bucketName" value="komar-clips"/>
    </bean>

    <bean id="putEditService" class="com.komar.service.coloudstorage.amazons3.putedit.AmazonS3PutEditPythonService">
        <property name="pythonSrcriptPath" value="/home/damian/komar/python/mediaEditingUploadInterface.py"/>
        <property name="bucketName" value="komar-clips"/>
        <property name="profileName" value="KOMAR_S3"/>
        <property name="tmpFilesFolderPath" value="/home/damian/tmp/"/>
    </bean>
    
	 
<!--
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />


    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
          p:password="${jdbc.password}" />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <context:component-scan base-package="pl.agh.edu.carecenter.server.dao"/>
    <context:component-scan base-package="pl.agh.edu.carecenter.server.service"/>
-->
    <mvc:resources mapping="/themes/**" location="/themes/" cache-period="31556926" />
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="1" />
    <mvc:resources mapping="/partials/**" location="/WEB-INF/partials/" cache-period="1" />


</beans>
    
    
    
    